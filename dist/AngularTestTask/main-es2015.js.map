{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/services/userService.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"card\\\">\\n  \\n  <div class=\\\"table-responsive\\\">\\n    <table class=\\\"table\\\">\\n      <thead>\\n          <tr>\\n            <td>Id</td>\\n            <td>Email</td>\\n            <td>First Name</td>\\n            <td>Last Name</td>\\n            <td>Avatar</td>\\n          </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let user of pages.data | paginate : { itemsPerPage: count,currentPage: p}\\\">\\n          <td>{{user.id}}</td>\\n          <td>{{user.email}}</td>\\n          <td>{{user.first_name}}</td>\\n          <td>{{user.last_name}}</td>\\n          <td><img src={{user.avatar}} /></td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <div>\\n      <pagination-controls  (pageChange)=\\\"p= $event\\\"></pagination-controls>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<!--<router-outlet></router-outlet>-->\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core'; \nimport { IPagination} from './models/IPagination';\nimport { UserService } from './services/userService';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n \n  errorMessage:string;\n  pages:IPagination;\np:number=1;\ncount:number=4;\n  constructor(private userService:UserService){}\n  \n  ngOnInit(): void {\nthis.userService.getUsers().subscribe(\n  pages=> {\n    this.pages=pages\n  },\n  error=>this.errorMessage=<any>error\n);\n\n    }\n  title = 'AngularTestTask';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n import { NgxPaginationModule } from 'ngx-pagination';\n\n@NgModule({\n  declarations: [\n    AppComponent \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,HttpClientModule,NgxPaginationModule\n  ],\n  providers: [ \n    //{provide:HTTP_INTERCEPTORS,useClass:LoadingScreenInterceptor,multi:true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient,HttpErrorResponse } from '@angular/common/http';\nimport { throwError,Observable, Subject } from 'rxjs';\nimport { IPagination } from '../models/IPagination';\nimport { environment } from 'src/environments/environment';\nimport { catchError , tap} from 'rxjs/operators';\nimport { Cacheable} from 'ngx-cacheable/cacheable.decorator';\n\nconst userNotifier = new Subject();\n \n@Injectable({\n    providedIn:'root'\n})\n\nexport class UserService {\n\n    constructor(private http:HttpClient){}\n\n    @Cacheable ({\n        cacheBusterObserver:userNotifier\n       })\n\n    getUsers():Observable<IPagination> {\n        return this.http.get<IPagination>(environment.serviceUrl+\"?per_page=100\")\n        .pipe(tap(data=>console.log(`All data : ${JSON.stringify(data)}`),\n                catchError(this.handleError))\n            );\n    }\n\n    private handleError(err:HttpErrorResponse) {\n        let errorMessage='';\n        if(err.error instanceof ErrorEvent)\n         errorMessage=`An error occured ${err.error.message} `;\n         else \n         errorMessage=`Server returned  code ${err.status},error message is ${err.message}`;\n         console.log(errorMessage);\n         return throwError(errorMessage);\n    }\n\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serviceUrl :\"https://reqres.in/api/users\" \n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n/*if (environment.production) {\n  enableProdMode();\n}*/\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}